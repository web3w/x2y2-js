import {ERC20Coder, Web3ABICoder} from "web3-abi-coder";
import {exchangeABI} from "../src/config";

const input = "0x357a150b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000048000000000000000000000000000000000000000000000000000019a51d014f72b0000000000000000000000000000000000000000000000000000000062d89772000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020e30b5a64960a08dfb64beb8ab65d860cd71da700000000000000000000000000000000000000000000000000000000000000005e02ce18c1fb5070a333a12fdeed607f0b65805ff207ab4cbc21bcb1bbd3533b45015f993ed29a9ed1a89117ea43fc4839df8664697f1a1f106dd5c4b915867e000000000000000000000000000000000000000000000000000000000000001b00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000003a54b460c8316840af0ff0ada6d09fd100000000000000000000000032f4b63a46c1d12ad82cabc778d75abf9889821a0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000062d8508e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001c0798bd5b3e785c29084e869d2de8e50dfe1e507356854d35f460911531c038433545f7ad8e505cdd20429d02dd560eb52cc1b5e9eaa40dc2cc8b3ff1cb0e198ff000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000001aa535d3d0c000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001dfe7ca09e99d10835bf73044a23b73fc20623df00000000000000000000000000000000000000000000000000000000001117650000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001aa535d3d0c000033acd52bb1e4feaecf5eda0c69cee72241f3093eebc380a36edfd9c79f64d8aa000000000000000000000000f849de01b080adc3a814fabe1e2087475cf2ed823c605807cc5e6bd6fc0d7e4eea50d3e2d66cd"

const coder = new Web3ABICoder(exchangeABI)

const data = coder.decodeInput(input)

// console.log(JSON.stringify(data,null,2))
const funcName = coder.getFunctionName(input.substring(0,10))
console.log(funcName)
const inputCode = "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000004800000000000000000000000000000000000000000000000000001d7f8eff6deee0000000000000000000000000000000000000000000000000000000062d891260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020e30b5a64960a08dfb64beb8ab65d860cd71da70000000000000000000000000000000000000000000000000000000000000000caf916a2c9756332310c5c2a63cc167a9e2d0cfe0cae9c362b23cd9cc3b53bb44548883fcc49f6a98e949d26ef80d169bfad3bc8c681324aafd9021a5360b3f1000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000e768562df4fcd64a1cf0f48ff110e25100000000000000000000000032f4b63a46c1d12ad82cabc778d75abf9889821a0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000062d83ddc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001c01d68ba32c73818490554bd555583af926eaa194f3f63510c8edec2a9f898c17c73c7e52bd001f2685e54afd362736af0fb3fc19acf24842b454c1674956347bf000000000000000000000000000000000000000000000000000000000000001b00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000186cc6acd4b000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001dfe7ca09e99d10835bf73044a23b73fc20623df0000000000000000000000000000000000000000000000000000000000111765000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000186cc6acd4b0000bca5a516011346295f48a510bb67ef818f73939e2d7dacaf9d18a9115fdffcfa000000000000000000000000f849de01b080adc3a814fabe1e2087475cf2ed823c605807cc5e6bd6fc0d7e4eea50d3e2d66cd"

console.log(coder.decodeFunctionData(funcName, inputCode))
